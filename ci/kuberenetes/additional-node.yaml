# Service for mongoose nodes RMI-communication 
apiVersion: v1
kind: Service
metadata:
  name: mongoose-svc
  labels:
    app: mongoose
spec:
  ports:
    - name: data
      port: 1099
      targetPort: 1099
    - name: http
      port: 9999
      targetPort: 9999
  selector:
    name: mongoose-node
---
# Service to communicate with Mongoose entry node via REST API
apiVersion: v1
kind: Service
metadata:
  name: mongoose-entry-node-svc
spec:
  type: LoadBalancer
  ports:
    - name: data
      port: 1099
      targetPort: 1099
    - name: http
      port: 9999
      targetPort: 9999
  selector:
    statefulset.kubernetes.io/pod-name: mongoose-node-0
---
# 4 additional Mongoose nodes
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongoose-node
spec:
  replicas: 4
  selector:
    matchLabels:
      name: mongoose-node
  serviceName: mongoose-svc
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        name: mongoose-node
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key:      "name"
                    operator: In
                    values:
                    - "mongoose-node"
                    - "mongoose-svc"
              topologyKey:    "kubernetes.io/hostname"
      containers:
      - image: "emcmongoose/mongoose-base"
        imagePullPolicy: Always
        name: mongoose-node

        args: {{- printf " [" -}}
          {{- printf "\"--run-node\"" -}}
          {{ if (ne $.Values.args "") and (ne $.Values.args nil) }}
            {{- printf "," }}
            {{- .Values.args -}}
          {{ end }}
          {{- printf "]" }}

        ports:
        - containerPort: 1099
        - containerPort: 9999
        {{ if .Values.debug }}
        - containerPort: 5005
        command: ["/opt/mongoose/entrypoint_debug.sh"]
        {{- end }}

